import { Metadata } from "../../types/launcher";
import { LimitFunction } from "p-limit";
export declare function ensureDir(dir: string): void;
export declare function cleanDir(dir: string): void;
export declare function moveFileSync(oldPath: string, newPath: string): void;
export declare function localpath(isCache?: boolean): string;
export declare function minecraft_dir(origami_data?: boolean): string;
export declare function sync_minecraft_data_dir(version: string, options?: boolean): string;
export declare function async_minecraft_data_dir(version: string): Promise<string>;
export declare function collectFiles(dir: string): Promise<string[]>;
export declare function printVersion(): any;
export declare function waitForFolder(metadata: Metadata, id: string): Promise<string>;
export declare function valid_string(input: any): input is string;
export declare function valid_boolean(input: any): input is boolean;
export declare function parse_input(input: string | boolean | string[]): string | boolean;
export declare function getSafeConcurrencyLimit(): number;
export declare function limitedAll<T>(tasks: (() => Promise<T>)[] | Promise<T>[], limit?: LimitFunction): Promise<T[]>;
export declare function moveFolderContents(srcFolder: string, destFolder: string): Promise<void>;
export declare function sanitizePathSegment(input: string): string;
export declare function jsonParser(str: string): any;
export declare function cleanAfterInstall(dir: string): Promise<void>;
export declare function extractZip(zip_file: string, target: string): Promise<void>;
export declare function extractTar(tarFile: string, target: string): Promise<void>;
